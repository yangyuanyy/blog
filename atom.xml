<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[YY]]></title>
  <subtitle><![CDATA[javascripter]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yyblog.mocoer.com/"/>
  <updated>2014-08-25T12:39:57.827Z</updated>
  <id>http://yyblog.mocoer.com/</id>
  
  <author>
    <name><![CDATA[YY]]></name>
    <email><![CDATA[yybuaa2011@163.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[多个github账号的SSH key切换使用]]></title>
    <link href="http://yyblog.mocoer.com/2014/08/25/%E5%A4%9Agithub%E8%B4%A6%E5%8F%B7SSH%20key%E5%88%87%E6%8D%A2%E4%BD%BF%E7%94%A8/"/>
    <id>http://yyblog.mocoer.com/2014/08/25/多github账号SSH key切换使用/</id>
    <published>2014-08-25T11:42:48.000Z</published>
    <updated>2014-08-25T12:39:36.000Z</updated>
    <content type="html"><![CDATA[<p>今天要发布一个公司的静态页面项目，选了使用github pages，于是给公司创建了一个github账号，在设置 SSH key 的时候出现一个问题：如果之前已经设置过 github 账号的 SSH key，如何设置第二个并且切换使用呢？查阅相关文档，整理该过程如下。</p>
<h2 id="目录">目录</h2>
<ol>
<li>创建第一个 github 账号</li>
<li>创建第二个 github 账号</li>
<li>切换账号使用</li>
</ol>
<h3 id="1-_创建第一个_github_账号">1. 创建第一个 github 账号</h3>
<p>在 <a href="https://github.com/" target="_blank" rel="external"> github.com </a> 创建一个github账号。并新建一个仓库( 名为 test )。<br>在本地创建SSH key。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/.ssh</div><div class="line">$ ssh-keygen -t rsa -C <span class="string">"your_email@your_email.com"</span></div></pre></td></tr></table></figure>

<p>随后一直Enter，再到当前用户根目录下找到.ssh文件夹，打开里面的id_rsa.pub，复制里面的内容，然后回到浏览器 github.com &gt; Account Settings &gt; SSH Keys &gt; Add SSH Key &gt; 粘贴key。</p>
<p>验证是否授权成功：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure>

<p>出现 success 字样则表示没有问题。</p>
<p>push 一些内容到仓库 test。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ mkdir gitTest</div><div class="line">$ <span class="built_in">cd</span> gitTest</div><div class="line">$ git init</div><div class="line">$ touch README</div><div class="line">$ git add .</div><div class="line">$ git commit -m <span class="string">'A commit'</span></div><div class="line">$ git remote add test1 git@github.com:yangyuanyy/test.git</div><div class="line">$ git push test1 master</div></pre></td></tr></table></figure>

<p>若成功 push 则第一个 github 账号就算创建完成了。</p>
<h3 id="2-_创建第二个_github_账号">2. 创建第二个 github 账号</h3>
<p>在 <a href="https://github.com/" target="_blank" rel="external"> github.com </a> 再次创建一个github账号。并新建一个仓库( 也可以名为 test )。</p>
<p>在本地创建SSH key。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/.ssh</div><div class="line">$ ssh-keygen -t rsa -C <span class="string">"your_email_2@your_email_2.com"</span></div></pre></td></tr></table></figure>

<p>这次设置第二个 SSH key 名称：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Enter file <span class="keyword">in</span> which to save the key (/Users/apple/.ssh/id_rsa): id_rsa_2</div></pre></td></tr></table></figure>

<p>再到当前用户根目录下找到.ssh文件夹，打开里面的id_rsa_2.pub，复制里面的内容，然后 github &gt; Account Settings &gt; SSH Keys &gt; Add SSH Key &gt; 粘贴key。</p>
<p>与第一个账号不同，这次要将新建的 SSH key 添加到 SSH agent 中</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>ssh-add ~<span class="regexp">/.ssh/id</span>_rsa_2</div></pre></td></tr></table></figure>

<p>在 .ssh 目录下创建 config 文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/.ssh</div><div class="line">$ touch config</div></pre></td></tr></table></figure>

<p>修改 config 内容如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># <span class="keyword">for</span> 第一个 github 账号</div><div class="line">Host github_1</div><div class="line">HostName github.com</div><div class="line">User git</div><div class="line">IdentityFile <span class="regexp">/Users/</span>apple<span class="regexp">/.ssh/i</span>d_rsa</div><div class="line"></div><div class="line"># <span class="keyword">for</span> 第二个 github 账号</div><div class="line">Host github_2</div><div class="line">HostName github.com</div><div class="line">User git</div><div class="line">IdentityFile <span class="regexp">/Users/</span>apple<span class="regexp">/.ssh/i</span>d_rsa_2</div></pre></td></tr></table></figure>

<p>分别测试两个账号的授权情况</p>
<figure class="highlight bach"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>ssh -<span class="constant">T</span> git<span class="variable">@github_1</span></div><div class="line"><span class="variable">$ </span>ssh -<span class="constant">T</span> git<span class="variable">@github_2</span></div></pre></td></tr></table></figure>

<h3 id="3-_切换账号使用">3. 切换账号使用</h3>
<p>push 一些内容到第二个账号的 test 仓库</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ mkdir gitTest2</div><div class="line">$ <span class="built_in">cd</span> gitTest2</div><div class="line">$ git init</div><div class="line">$ touch README</div><div class="line">$ git add .</div><div class="line">$ git commit -m <span class="string">'A commit'</span></div><div class="line">$ git remote add test2 git@github_2:yangyuanyy/test.git</div><div class="line">$ git push test2 master</div></pre></td></tr></table></figure>

<p>若成功 push 则完成了账号的切换使用。</p>
]]></content>
    
    
      <category term="github" scheme="http://yyblog.mocoer.com/tags/github/"/>
    
      <category term="github" scheme="http://yyblog.mocoer.com/categories/github/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[搭建 AngularJS 开发环境]]></title>
    <link href="http://yyblog.mocoer.com/2014/08/22/%E6%90%AD%E5%BB%BAAngularJS%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://yyblog.mocoer.com/2014/08/22/搭建AngularJS开发环境/</id>
    <published>2014-08-22T13:33:12.000Z</published>
    <updated>2014-08-22T16:35:36.000Z</updated>
    <content type="html"><![CDATA[<h2 id="目录">目录</h2>
<ol>
<li>安装 Node.js</li>
<li>安装 Node 开发框架 Express</li>
<li>安装自动化单元测试 Karma</li>
<li>创建 Express 项目</li>
<li>创建单元测试</li>
<li>给 Chrome 安装 AngularJS Batarang 扩展</li>
</ol>
<h3 id="1-_安装_Node-js">1. 安装 Node.js</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ apt-get install node.js</div><div class="line">$ node --version</div><div class="line">v0.<span class="number">10.30</span></div></pre></td></tr></table></figure>

<p>了解 <a href="http://nodejs.org/" target="_blank" rel="external"> Node.js </a></p>
<h3 id="2-_安装Node开发框架_Express">2. 安装Node开发框架 Express</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ npm install -g express</div><div class="line">$ npm install -g express-generator</div><div class="line">$ express --version</div><div class="line"><span class="number">4.2</span>.<span class="number">0</span></div></pre></td></tr></table></figure>

<p>了解 <a href="http://express.jsbin.cn/" target="_blank" rel="external"> Express </a></p>
<h3 id="3-_安装自动化单元测试_Karma">3. 安装自动化单元测试 Karma</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ npm install -g karma</div><div class="line">$ karma --version</div><div class="line">Karma version: <span class="number">0.12</span>.<span class="number">21</span></div></pre></td></tr></table></figure>

<p>了解 <a href="https://github.com/karma-runner/karma" target="_blank" rel="external"> Karma </a></p>
<h3 id="4-_创建_Express_项目">4. 创建 Express 项目</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ express demo</div><div class="line">$ <span class="built_in">cd</span> demo</div><div class="line">$ mkdir test // 存放测试用例</div></pre></td></tr></table></figure>

<h3 id="5-_创建单元测试">5. 创建单元测试</h3>
<p>编写业务脚本。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> test</div><div class="line">$ vi testee.js</div><div class="line">function <span class="function"><span class="title">sayHi</span></span>(){</div><div class="line">	<span class="keyword">return</span> <span class="string">'Hi'</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<p>编写测试脚本。这里选择使用 <a href="https://github.com/pivotal/jasmine" target="_blank" rel="external"> Jasmine </a> 风格来编写测试代码。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ vi tester.js</div><div class="line">describe( <span class="string">"testee"</span>, <span class="function"><span class="title">function</span></span>(){</div><div class="line">	it(<span class="string">"to work correctly"</span>, <span class="function"><span class="title">function</span></span>(){</div><div class="line">		expect(sayHi()).toEqual(<span class="string">'Hi'</span>);</div><div class="line">	})</div><div class="line">} );</div></pre></td></tr></table></figure>

<p>配置 karma.conf.js 文件并执行测试。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> .. // 回到 demo 根目录</div><div class="line">$ karma init</div><div class="line">$ karma start</div></pre></td></tr></table></figure>

<p>测试通过。</p>
<h3 id="6-_给_Chrome_安装_AngularJS_Batarang_扩展">6. 给 Chrome 安装 <a href="https://github.com/angular/angularjs-batarang" target="_blank" rel="external"> AngularJS Batarang </a> 扩展</h3>
<p>安装成功后，会在 Chrome 的 F12 面板中增加一个新标签：AngularJS，通过该插件可以当前运行的应用中每个模型、作用域以及变量值、运行效率、服务依赖关系等信息。<br><img src="http://img01.taobaocdn.com/imgextra/i1/1643172296/TB2LmwkaXXXXXcJXXXXXXXXXXXX-1643172296.png" height="206" style="padding:30px 0;"></p>
]]></content>
    
    
      <category term="AngularJS" scheme="http://yyblog.mocoer.com/tags/AngularJS/"/>
    
      <category term="Javascript" scheme="http://yyblog.mocoer.com/tags/Javascript/"/>
    
      <category term="AngularJS" scheme="http://yyblog.mocoer.com/categories/AngularJS/"/>
    
  </entry>
  
</feed>
